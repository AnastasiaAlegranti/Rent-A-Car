//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RentACar
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RentalCarEntities : DbContext
    {
        public RentalCarEntities()
            : base("name=RentalCarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Car> Cars { get; set; }
        public virtual DbSet<ContactUsMessage> ContactUsMessages { get; set; }
        public virtual DbSet<Manufacturer> Manufacturers { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ShowAllCar> ShowAllCars { get; set; }
        public virtual DbSet<ShowAllOrdersDetail> ShowAllOrdersDetails { get; set; }
    
        [DbFunction("RentalCarEntities", "GetBookedDatesTable")]
        public virtual IQueryable<GetBookedDatesTable_Result> GetBookedDatesTable(Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetBookedDatesTable_Result>("[RentalCarEntities].[GetBookedDatesTable](@start, @end)", startParameter, endParameter);
        }
    
        public virtual ObjectResult<GetAllOrdersByAdmin_Result> GetAllOrdersByAdmin(Nullable<int> manufacturerId, Nullable<int> modelId, Nullable<int> carId, Nullable<int> userId)
        {
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("manufacturerId", manufacturerId) :
                new ObjectParameter("manufacturerId", typeof(int));
    
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("modelId", modelId) :
                new ObjectParameter("modelId", typeof(int));
    
            var carIdParameter = carId.HasValue ?
                new ObjectParameter("carId", carId) :
                new ObjectParameter("carId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrdersByAdmin_Result>("GetAllOrdersByAdmin", manufacturerIdParameter, modelIdParameter, carIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetAllOrdersByUser_Result> GetAllOrdersByUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOrdersByUser_Result>("GetAllOrdersByUser", userIdParameter);
        }
    
        public virtual ObjectResult<GetAvailableCarsBySearch_Result> GetAvailableCarsBySearch(Nullable<System.DateTime> start, Nullable<System.DateTime> end, Nullable<int> manufacturerId, Nullable<int> modelId, Nullable<int> carId)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var manufacturerIdParameter = manufacturerId.HasValue ?
                new ObjectParameter("manufacturerId", manufacturerId) :
                new ObjectParameter("manufacturerId", typeof(int));
    
            var modelIdParameter = modelId.HasValue ?
                new ObjectParameter("modelId", modelId) :
                new ObjectParameter("modelId", typeof(int));
    
            var carIdParameter = carId.HasValue ?
                new ObjectParameter("carId", carId) :
                new ObjectParameter("carId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAvailableCarsBySearch_Result>("GetAvailableCarsBySearch", startParameter, endParameter, manufacturerIdParameter, modelIdParameter, carIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetBookedDatesFromTodayByCar(Nullable<int> carId)
        {
            var carIdParameter = carId.HasValue ?
                new ObjectParameter("carId", carId) :
                new ObjectParameter("carId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetBookedDatesFromTodayByCar", carIdParameter);
        }
    }
}
